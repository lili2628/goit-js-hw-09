{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAEtC,SAASC,EAAcC,EAAUC,GAE7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKfL,EAAOa,iBAAiB,UAExB,SAAyBC,GACvBA,EAAEC,iBAEF,MAAMC,EAAOC,OAAOjB,EAAOkB,SAASC,KAAKC,OACnCC,EAASJ,OAAOjB,EAAOkB,SAASI,OAAOF,OAC7C,IAAIG,EAAQN,OAAOjB,EAAOkB,SAASb,MAAMe,OACrCI,EAAW,EAEf,KAAOA,GAAYH,GACjBlB,EAAcqB,EAAUD,GACvBE,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEzEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,IAGvEkB,GAASP,EACTQ,GAAY,EAGdV,EAAEiB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n\n    return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay }); // Fulfill\n        } else {\n          reject({ position, delay }); // Reject\n        }\n      }, delay);\n    });\n  \n}\n\nformEl.addEventListener('submit', onCreatePromise);\n\nfunction onCreatePromise(e) {\n  e.preventDefault();\n\n  const STEP = Number(formEl.elements.step.value);\n  const AMOUNT = Number(formEl.elements.amount.value);\n  let delay = Number(formEl.elements.delay.value);\n  let position = 1;\n\n  while (position <= AMOUNT) {\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n    delay += STEP;\n    position += 1;\n  }\n\n  e.target.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","STEP","Number","elements","step","value","AMOUNT","amount","delay1","position1","then","$parcel$interopDefault","Notify","success","catch","failure","target","reset"],"version":3,"file":"03-promises.c5093f13.js.map"}